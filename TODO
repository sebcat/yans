## ergonomics
change:
printf 'www.google.com www.sydsvenskan.se www.reddit.com www.trololo.com' | dnstres 2 > resolved
grab-banners -p21,22,80,443,8000,8080 -n 256 -t 5 -d 100 < resolved | tee banners.plain
grab-banners -p21,22,80,443,8000,8080 -n 256 -t 5 -d 100 --tls < resolved | tee banners.tls
mkreport -t services -o services.result banners.plain banners.tls
mkreport -t certs -o services.result banners.plain banners.tls

to:
printf 'www.google.com www.sydsvenskan.se www.reddit.com www.trololo.com' | scan resolve > resolved
scan banners -p21,22,80,443,8000,8080 -n 256 -t 5 -d 100 < resolved | tee banners.plain
scan banners -p21,22,80,443,8000,8080 -n 256 -t 5 -d 100 --tls < resolved | tee banners.tls
scan aggregate -t banner-data --in-banners banners.plain \
    --in-banners banners.tls --out-certs certs --out-services services
scan report --in-services services --out-services services.csv

maybe have report be a case of aggregate

support: stores, i/o w/, w/o compression, from stdio or files (in or outside of stores)

## grab-banners,reaplan,tcpsrc

kng_mod_fini, eds:stop_service_listeners - make sure it works the way it
  is intended (kng_mod_fini has no SIGCHLD handler, so no EINTR in
  nanosleep?) and don't wait more in stop_service_listeners than needed.

reaplan: handle_tls_handshake - if the handshake fails we should still
  write an empty banner in grab-banners. Implement, verify with test case
  of a server sending a TLS Alert.

lua: use as little Lua as possible. Long-term goal: remove it completly.

tcpsrc: Implement TCPSRC_ALLOW, TCPSRC_DISALLOW. Make ioctl device-/system
  wide and have rc script setting ranges at boot?
tcpsrc: have separate device for ALLOW/DISALLOW? Should not be possible
  to change from sandbox (e.g., /dev/tcpsrc, /dev/tcpsrc-ctl)

## unsorted

- store list <store-id> - pass dir-fd from stored and have client list store?

- yans-fe: If 1) is selected, then 2) then 1) again: report entries are
  appended. Make them replace instead of append

- Currently, a hard restart prevents services from starting again due to
  existing PID-files. Clean pidfiles on service start (potential issues
  if service is started two times?)
- Do not wait while shutting down a service if all children are terminated
- store index --name-must-match?

- sync index vs job.json times - queued or started? Maybe no duplication?

## ethd
  - interfaces and stuff are loaded at boot, may change during uptime

## lib/net/url
  - url_normalize: if we have a percent-encoding to a valid char, decode it?

## lib/net/ip
  - make it possible to add/remove an address/range to/from a range
  - have contains work on current instead of first?

## To add
  - SSDP, MDNS, ICMP multicast for host discovery on LAN
  protocols: dns, ssh, ftp, http, smtp, pop3, imap, vnc, rdp
  functionality: enumeration of capabilities (cipher suites, commands, &c)
                 default account testing

## slask

for E in $(store list); do store list $E; done | cut -f 1 -d ' ' | paste -s -d+ - | bc

tcpdump -n '(ether broadcast or ether multicast or ether dst 00:24:d7:17:9c:38) and (not ether src 00:24:d7:17:9c:38)'

tcpdump -n 'ether src not <local0> and ether src not <local1> ... and ether src not <localN>'

echo -en 'M-SEARCH * HTTP/1.1\r\nHOST: 239.255.255.250:1900\r\nMAN: ssdp:discover\r\nMX: 10\r\nST: ssdp:all\r\nUser-Agent: DinMammaOchDanHarmon/1.0 UPnP/1.1\r\n\r\n' | socat stdio udp4-datagram:239.255.255.250:1900

echo -en 'M-SEARCH * HTTP/1.1\r\nHOST: [FF02::C]:1900\r\nMAN: ssdp:discover\r\nMX: 10\r\nST: ssdp:all\r\nUser-Agent: DinMammaOchDanHarmon/1.0 UPnP/1.1\r\n\r\n' | socat stdio 'udp6-datagram:[FF02::C%wlan0]:1900'
