#!/bin/sh

# PID of current child, if any
CHILD=

# Exit status of last child, if any
STATUS=

# TCP ports to check
: ${TCP_PORTS_PLAIN=21,22,25,53,80,110,143,443,6667-6669,7000,8000,8008,8080,8081}
: ${TCP_PORTS_TLS=80,443,465,990,993,995,6697,8443}

# scan(1) binary to use
: ${SCAN:=scan}

# flags to use for all invocations of $SCAN
: ${SCANOPTS:=}

# initial input file
: ${INPUT:=subject.txt}

clear_manifest() {
  if [ -z "$YANS_ID" ]; then
    printf '' > MANIFEST
  else
    printf '' | store put -i "$YANS_ID" MANIFEST
  fi
}

# manifest <file> <descr>
manifest() {
  # TODO: Only manifest file if > N bytes (compressed? decompr?)
  if [ -z "$YANS_ID" ]; then
    printf '%s %s\n' "$1" "$2" >> MANIFEST
  else
    printf '%s %s\n' "$1" "$2" | store append -i "$YANS_ID" MANIFEST
  fi
}

byebye() {
  if [ -n "$CHILD" ]; then
    kill -TERM "$CHILD" 2>/dev/null
    wait "$CHILD"
  fi
  printf "Caught HUP/INT/TERM - exiting\n"
  exit 1
}

trap byebye HUP INT TERM

run() {
  printf "[%s] Starting %s\n" "$(date '+%Y-%m-%d %H:%M:%S %z')" "$*"
  ( exec "$@" ) &
  CHILD=$!
  wait "$CHILD"
  STATUS=$?
  CHILD=
  if [ "$STATUS" -eq 0 ]; then
    printf "[%s] Done\n" "$(date '+%Y-%m-%d %H:%M:%S %z')"
  else
    printf "[%s] Failed with status code: %s\n" \
        "$(date '+%Y-%m-%d %H:%M:%S %z')" "$STATUS"
  fi
}

clear_manifest

run $SCAN resolve                   \
    $SCANOPTS                       \
    --in          "$INPUT"          \
    --out         zlib:resolved.gz

if [ -n "$TCP_PORTS_PLAIN" ]; then
  run $SCAN banners                           \
      $SCANOPTS                               \
      --timeout         5                     \
      --ports           "$TCP_PORTS_PLAIN"    \
      --mdelay-per-tick 100                   \
      --max-clients     256                   \
      --in              zlib:resolved.gz      \
      --out             zlib:banners.plain.gz
fi

if [ -n "$TCP_PORTS_TLS" ]; then
  run $SCAN banners                         \
      $SCANOPTS                             \
      --tls                                 \
      --timeout         5                   \
      --ports           "$TCP_PORTS_TLS"    \
      --mdelay-per-tick 100                 \
      --max-clients     256                 \
      --in              zlib:resolved.gz    \
      --out             zlib:banners.tls.gz
fi

run $SCAN collate                                     \
    $SCANOPTS                                         \
    --type banners                                    \
    --in-banners       zlib:banners.plain.gz          \
    --in-banners       zlib:banners.tls.gz            \
    --out-services-csv zlib:services.csv.gz           \
    --out-certs-csv    zlib:certs.csv.gz

manifest "services.csv.gz" "Services"
manifest "certs.csv.gz" "Certificates"


printf "[%s] Scan done\n" "$(date '+%Y-%m-%d %H:%M:%S %z')"
