#!/bin/sh
# PROVIDE: pcapd
# REQUIRE: LOGIN FILESYSTEMS
# KEYWORD: shutdown

. /etc/rc.subr

# Creating the group and user:
#   pw groupadd pcapd
#   pw useradd pcapd -d /var/pcapd -g pcapd -s /user/sbin/nologin
#
# The daemon drops user privs itself, which is why pcapd_user, pcapd_group
# is not used
: ${pcapd_duser:="pcapd"}
: ${pcapd_dgroup:="pcapd"}



# devfs needs to be mounted inside the chroot of pcapd so that
# it is possible for pcapd to access the bpf device. The ID
# of this ruleset must be set in /etc/rc.conf.
#
# NB: if the ruleset is set but the ID does not exist in /etc/devfs.rules
#     a new one will be used, with no hidden devices. This is bad.
#
# example ruleset:
#   [pcapdrules=67]
#   add hide
#   add path bpf mode 660 unhide
: ${pcapd_devfs_ruleset:=""}

name="pcapd"
rcvar="pcapd_enable"
command="/usr/bin/pcapd"
command_args="-u ${pcapd_duser} -g ${pcapd_dgroup} -b /var/pcapd"
start_precmd="pcapd_precmd"
pidfile="/var/pcapd/pcapd.pid"

pcapd_precmd()
{
  if [ -z "${pcapd_devfs_ruleset}" ]; then
    warn "pcapd_devfs_ruleset is not set"
    return 1
  fi

  case ${pcapd_devfs_ruleset} in
    ''|*[!0-9]*)
      warn "pcapd_devfs_ruleset must be a number"
      return 1
      ;;
  esac

  if [ -d /var/pcapd/dev ]; then
    umount /var/pcapd/dev 2>/dev/null
  fi

  if [ -d /var/pcapd ]; then
    rm -rf /var/pcapd
  fi

  mkdir /var/pcapd || {
    warn "Unable to create /var/pcapd"
    return 1
  }

  chmod 770 /var/pcapd || {
    warn "Failed to set correct permissions of /var/pcapd"
    return 1
  }

  chown "${pcapd_duser}:${pcapd_dgroup}" /var/pcapd || {
    warn "Failed to set correct ownership of /var/pcapd"
    return 1
  }

  # mount devfs in chroot
  mkdir /var/pcapd/dev
  mount -t devfs -o ruleset=${pcapd_devfs_ruleset} devfs /var/pcapd/dev || {
    warn "Failed to mount pcapd devfs"
    return 1
  }

  # Set correct owner:group for bpf device
  chown "${pcapd_duser}:${pcapd_dgroup}" /var/pcapd/dev/bpf || {
    warn "Failed to chown bpf device for pcapd"
    return 1
  }

  return 0
}

load_rc_config $name
run_rc_command "$1"
