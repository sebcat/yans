##
## service agnostic messages
##

status_resp {
  data okmsg;
  data errmsg;
}

##
## stored messages
##
store_req {
  data action;
  data store_id;
  data list_must_match; # ERE for filtering content of store_list reply
  long index;           # store index: append entry to index on "enter"
  data name;            # store index: entry display name in index
  long indexed;         # store index: UNIX timestamp for index
}

store_list {
  data errmsg;
  data entries;
}

store_entered_req {
  data action; # open, rename

  data open_path;
  long open_flags;

  data rename_from;
  data rename_to;
}

##
## clid messages
##
resolver_req {
  data hosts;
  long compress;
}

##
## knegd messages
##

knegd_req {
  long timeout;
  data action;
  data id;
  data name;
  data type;
}


##
## result types
##
banner {
  data addr;
  data name;
  long mpid; # matched protocol ID
  long fpid; # fallback protocol ID
  data banner;
  data certs;
  data chash;
}

httpmsg {
  # Message stuff
  data id;
  data parent_id;
  long depth;

  # URL parts
  data scheme;
  data addr;     # IPv4/IPv6 address
  data hostname; # domain name or IPv4/IPv6 address
  data port;
  data path;
  data params;
  # TODO: Currently, we do not use the fragment part of the URL, so we
  #       do not save it. Add it here when-/ifever fragment-specific
  #       functionality is added (e.g., JS eval).

  # HTTP request parts
  data method;
  data reqtype; # content type of request body
  data reqbody;

  # HTTP response parts
  data resphdr;
  data respbody;
}
