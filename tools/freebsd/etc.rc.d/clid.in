#!/bin/sh
# PROVIDE: clid
# REQUIRE: LOGIN FILESYSTEMS
# KEYWORD: shutdown
# Copyright (c) 2019 Sebastian Cato
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

. /etc/rc.subr

: ${clid_enable:="no"}
: ${clid_duser:="clid"}
: ${clid_dgroup:="yans"}
: ${ystatedir:="@LOCALSTATEDIR@/yans"}
: ${clid_basepath:="${ystatedir}/clid"}

name="clid"
rcvar="clid_enable"
command="@BINDIR@/${name}"
command_args="-u '${clid_duser}' -g '${clid_dgroup}' -b '${clid_basepath}'"
start_precmd="clid_precmd"
pidfile="${clid_basepath}/clid.pid"

clid_precmd()
{
  install -m 775 -o root -g yans -d "${ystatedir}" || {
    err 1 "Failed to create ${ystatedir}"
  }

  install -m 770 -o "${clid_duser}" -g "${clid_dgroup}" \
      -d "${clid_basepath}" || {
    err 1 "Failed to create ${clid_basepath}"
  }

  if [ -f "$pidfile" ]; then
    local pid=$(check_pidfile "$pidfile" "$command")
    if [ -z "$pid" ]; then
      warn "Removing stale pidfile"
      rm "$pidfile"
    else
      # Shouldn't happen due to the way rc works, but check for it anyway
      err 1 "Already running at $pid"
    fi
  fi

  return 0
}

load_rc_config $name
run_rc_command "$1"
