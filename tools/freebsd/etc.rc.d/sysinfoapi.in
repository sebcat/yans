#!/bin/sh
# PROVIDE: sysinfoapi
# REQUIRE: LOGIN FILESYSTEMS
# KEYWORD: shutdown

. /etc/rc.subr

: ${sysinfoapi_enable:="no"}
: ${sysinfoapi_duser:="sysinfoapi"}
: ${sysinfoapi_dgroup:="yans"}
: ${ystatedir:="@LOCALSTATEDIR@/yans"}
: ${sysinfoapi_basepath:="${ystatedir}/sysinfoapi"}

name="sysinfoapi"
rcvar="sysinfoapi_enable"
command="@BINDIR@/${name}"
command_args="-u '${sysinfoapi_duser}' -g '${sysinfoapi_dgroup}' -b '${sysinfoapi_basepath}'"
start_precmd="sysinfoapi_precmd"
pidfile="${sysinfoapi_basepath}/sysinfoapi.pid"

sysinfoapi_precmd()
{
  install -m 775 -o root -g yans -d "${ystatedir}" || {
    err 1 "Failed to create ${ystatedir}"
  }

  install -m 755 -o "${sysinfoapi_duser}" -g "${sysinfoapi_dgroup}" \
      -d "${sysinfoapi_basepath}" || {
    err 1 "Failed to create ${sysinfoapi_basepath}"
  }

  if [ -f "$pidfile" ]; then
    local pid=$(check_pidfile "$pidfile" "$command")
    if [ -z "$pid" ]; then
      warn "Removing stale pidfile"
      rm "$pidfile"
    else
      # Shouldn't happen due to the way rc works, but check for it anyway
      err 1 "Already running at $pid"
    fi
  fi

  return 0
}

load_rc_config $name
run_rc_command "$1"
