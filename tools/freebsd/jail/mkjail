#!/bin/sh

# constants
MKJAILDIR=$(pwd)/tools/freebsd/jail
RCDDIR=$MKJAILDIR/../etc.rc.d
BUILDWORLDCONF=$MKJAILDIR/src.conf.buildworld
INSTALLWORLDCONF=$MKJAILDIR/src.conf.installworld
WS=$(printf ' \r\n\t')
NCPUS=$(sysctl -n hw.ncpu)
JAILUSERS="ethd clid stored knegd"
JAILGROUPS="ethd clid stored knegd"

# args
JAILDIR=
JAILNAME=
REBUILD=

die() {
  printf "%s\n" "$1" >&2
  exit 1
}

usage() {
  cat <<EOF 2>&1
args: [-r] jailpath

  -r:          rebuild world
  jailpath:    complete path to jail
EOF
  exit 1
}

is_valid_name() {
  case $1 in
    ''|*[$WS]*)
      return 1
    ;;
  esac
  return 0
}

if [ ! -d "$MKJAILDIR" ]; then
  die "run from base directory"
fi

while getopts rc: optname; do
  case $optname in
    r)
      REBUILD=yes
      ;;
    ?)
      usage
      ;;
  esac
done
shift $(($OPTIND - 1))
JAILDIR=$1
JAILNAME=$(basename "$JAILDIR")

if ! is_valid_name "$JAILNAME"; then
  die "invalid jail name"
fi

if [ -d "$JAILDIR" ]; then
  die "jail directory already exists"
fi

# make a basic jail
mkdir -p "$JAILDIR" || die "unable to create directory: $JAILDIR"
if [ -n "$REBUILD" ]; then
  make -C /usr/src buildworld -j${NCPUS} DESTDIR="$JAILDIR" \
      SRCCONF="$BUILDWORLDCONF" || die "buildworld failure"
fi
make -C /usr/src installworld DESTDIR="$JAILDIR" \
    SRCCONF="$INSTALLWORLDCONF" || die "installworld failure"
make -C /usr/src distribution DESTDIR="$JAILDIR" \
    SRCCONF="$INSTALLWORLDCONF" || die "distribution failure"

pkg -r "$JAILDIR" install --yes nginx || die "nginx installation failure"
NCPUS=$NCPUS ./build.sh || die "yans build failure"
make install-strip DESTDIR="$JAILDIR" || die "yans install failure"
make install-rcfiles DESTDIR="$JAILDIR" || die "yans install-rcfiles failure"
install -m 644 "$MKJAILDIR/jailconf/rc.conf" "$JAILDIR/etc" || \
    die "unable to install jail rc.conf"

#TODO:
#   install nginx conf

for G in $JAILGROUPS; do
  pw -R "$JAILDIR" groupadd $G
done

for U in $JAILUSERS; do
  # TODO: not all users will have the same group as their own name
  #       or maybe they will, and the scangroup should be an additional group?
  pw -R "$JAILDIR" useradd $U -d /var/$U -g $U -s /usr/sbin/nologin
done

chflags -R noschg "$JAILDIR/var"
rm -rf "$JAILDIR/var" || die "unable to clear jail /var"
mkdir -p "$JAILDIR/var" || die "unable to create /var mountpoint"

cat <<EOF
# /etc/devfs.rules:
[yansrules=67]
add hide
add path log unhide
add path null unhide
add path zero unhide
add path crypto unhide
add path random unhide
add path urandom unhide
add path stdin unhide
add path stdout unhide
add path stderr unhide
add path fd unhide
add path 'fd/*' unhide
add path bpf mode 660 unhide

# /etc/jail.conf:
$JAILNAME {
  path = ${JAILDIR}_ro;
  allow.raw_sockets;
  allow.mount;
  allow.mount.devfs;
  allow.mount.nullfs;
  enforce_statfs = 1;
  devfs_ruleset = 67;
  mount.devfs;
  host.hostname = $JAILNAME;
  interface = FIXME;
  ip4.addr = FIXME;
  exec.start = "/bin/sh /etc/rc";
  exec.stop = "/bin/sh /etc/rc.shutdown";
}

# /etc/fstab:
$JAILDIR ${JAILDIR}_ro nullfs ro 0 0
tmpfs ${JAILDIR}_ro/tmp tmpfs rw,size=10M 0 0
tmpfs ${JAILDIR}_ro/var tmpfs rw,size=10M 0 0

# create ro mountpoint
mkdir -p ${JAILDIR}_ro
EOF

