#!/bin/sh -xe
# Copyright (c) 2019 Sebastian Cato
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

die() {
  printf '%s\n' "$1" >&2
  exit 1
}

RM_RF_PATHS="/rescue /media /mnt /net /usr/share/misc /etc/periodic \
/usr/local/share/doc"
RM_F_PATHS="/usr/sbin/cxgbetool /etc/defaults/periodic.conf"

: ${MOUNTPOINT:=$(pwd)/mntpoint}
: ${IMG:=$1}
: ${VMSIZE:=256M}
: ${WORLDDIR:=/usr/src}
: ${KERNCONF:=YANS}
: ${SRCCONF:=$(pwd)/src.conf.installworld}
: ${PKGS:=nginx-lite jansson re2 curl acme.sh}

[ -e "$MOUNTPOINT" ] && die "MOUNTPOINT exists"
[ -z "$IMG" -o -e "$IMG" ] && die "missing IMG name or existing IMG"

case $MOUNTPOINT in
  ''|[^/]*)
    die "MOUNTPOINT must be an absolute path"
    ;;
esac

#TODO: install trap for cleaning up md(4) and mount point

# Create the root file system and mount it at MOUNTPOINT
mkdir -p "$MOUNTPOINT"
truncate -s "$VMSIZE" "$IMG"
DEVICE=$(mdconfig -f "$IMG")
DEVICEPATH=/dev/$DEVICE
newfs -L rootfs "$DEVICEPATH"
mount "$DEVICEPATH" "$MOUNTPOINT"

# install world, kernel and distribution into the rootfs
# assume no modules are to be installed (empty MODULES_OVERRIDE)
make -C "$WORLDDIR" "DESTDIR=$MOUNTPOINT" "KERNCONF=$KERNCONF" \
    "SRCCONF=$SRCCONF" MODULES_OVERRIDE= \
    installworld installkernel distribution || \
    die "failed to install system to rootfs"

# mount devfs and chroot into rootfs to update stuff
mkdir -p "$MOUNTPOINT/dev"
mount -t devfs devfs "$MOUNTPOINT/dev"
if [ -f "$MOUNTPOINT/usr/bin/newaliases" ]; then
  chroot "$MOUNTPOINT" /usr/bin/newaliases
fi
chroot "$MOUNTPOINT" /etc/rc.d/ldconfig forcestart
ASSUME_ALWAYS_YES=yes /usr/sbin/pkg -r "$MOUNTPOINT" install -y $PKGS
ASSUME_ALWAYS_YES=yes /usr/sbin/pkg -r "$MOUNTPOINT" clean -y -a

# Remove trees
for A in $RM_RF_PATHS; do
  rm -rf "$MOUNTPOINT$A"
done

# remove files found with find $MOUNTPOINT -type f -size +1M
# or other files we don't need
for A in  $RM_F_PATHS; do
  rm -f "$MOUNTPOINT$A"
done

# Remove static libraries
find "$MOUNTPOINT" -type f -name '*.a' -delete

# Remove content of /var, since we'll mount a memory disk over it anyway
chflags noschg "$MOUNTPOINT/var/empty"
rm -rf "$MOUNTPOINT/var/"
mkdir "$MOUNTPOINT/var/"

# Compress kernel
gzip -9 "$MOUNTPOINT/boot/kernel/kernel"

# umount and cleanup
umount "$MOUNTPOINT/dev"
umount "$MOUNTPOINT"
rmdir "$MOUNTPOINT"
mdconfig -du "$DEVICE"
